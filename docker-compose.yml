version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: messaging-service-db
    environment:
      POSTGRES_DB: messaging_service
      POSTGRES_USER: messaging_user
      POSTGRES_PASSWORD: messaging_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U messaging_user -d messaging_service"]
      interval: 10s
      timeout: 5s
      retries: 5

  sms-provider:
    build:
      context: .
      dockerfile: providers/Dockerfile.sms
    container_name: messaging-sms-provider
    environment:
      MESSAGING_SERVICE_WEBHOOK_URL: http://messaging-service:8000/api/webhooks/sms
      SMS_PROVIDER_API_KEY: sms_provider_api_key
      SIMULATE_REPLIES: false
      PORT: 8000
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  email-provider:
    build:
      context: .
      dockerfile: providers/Dockerfile.email
    container_name: messaging-email-provider
    environment:
      MESSAGING_SERVICE_WEBHOOK_URL: http://messaging-service:8000/api/webhooks/email
      EMAIL_PROVIDER_API_KEY: email_provider_api_key
      SIMULATE_REPLIES: false
      PORT: 8000
    ports:
      - "8002:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
